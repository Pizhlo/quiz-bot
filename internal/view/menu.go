package view

import (
	tele "gopkg.in/telebot.v3"
)

var (
	BtnStartQuiz = tele.Btn{Text: "–ù–∞—á–∞—Ç—å –∫–≤–∏–∑", Unique: "start_quiz"}
	BtnResults   = tele.Btn{Text: "–ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", Unique: "results"}

	BtnNewLvl = tele.Btn{Text: "–î–∞–ª—å—à–µ‚û°Ô∏è", Unique: "new_lvl"}

	BtnStartFirstLevel  = tele.Btn{Text: "–ù–∞—á–∞—Ç—å", Unique: "start_first_lvl"}
	BtnStartSecondLevel = tele.Btn{Text: "–ù–∞—á–∞—Ç—å", Unique: "start_second_lvl"}
	BtnStartThirdLevel  = tele.Btn{Text: "–ù–∞—á–∞—Ç—å", Unique: "start_third_lvl"}

	BtnBackToMenu = tele.Btn{Text: "‚¨ÖÔ∏è–ú–µ–Ω—é", Unique: "menu"}

	BtnNext = tele.Btn{Text: "–î–∞–ª—å—à–µ‚û°Ô∏è", Unique: "next"}

	// –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
	BtnSimpleAnswer = tele.Btn{Unique: "simple_answer"}

	// –∫–Ω–æ–ø–∫–∞ –¥–ª—è 2 —Ä–∞—É–Ω–¥–∞, –≥–¥–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞
	BtnAnswer = tele.Btn{Unique: "answer"}
	// –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ (–¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞)
	BtnSendAnswer = tele.Btn{Text: "üìù–û—Ç–≤–µ—Ç–∏—Ç—å", Unique: "send_answer"}
)

func MainMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnStartQuiz),
		menu.Row(BtnResults),
	)

	return menu
}

func Next() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnNext),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

func NewLvl() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnNewLvl),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

func BackToMenu() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnBackToMenu),
	)

	return menu
}

func StartFirstLevel() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnStartFirstLevel),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

func StartSecondLevel() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnStartSecondLevel),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

func StartThirdLevel() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Row(BtnStartThirdLevel),
		menu.Row(BtnBackToMenu),
	)

	return menu
}

func SimpleAnswers(answers []string) *tele.ReplyMarkup {
	btns := []tele.Btn{}

	for _, answer := range answers {
		BtnSimpleAnswer.Text = answer
		BtnSimpleAnswer.Data = answer

		btns = append(btns, BtnSimpleAnswer)
	}

	btns = append(btns, BtnBackToMenu)

	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Split(2, btns)...,
	)

	return menu
}

func Answers(answers []string) *tele.ReplyMarkup {
	btns := []tele.Btn{}

	for _, answer := range answers {
		BtnAnswer.Text = answer
		BtnAnswer.Data = answer

		btns = append(btns, BtnAnswer)
	}

	btns = append(btns, BtnBackToMenu, BtnSendAnswer)

	menu := &tele.ReplyMarkup{}

	menu.Inline(
		menu.Split(2, btns)...,
	)

	return menu
}
