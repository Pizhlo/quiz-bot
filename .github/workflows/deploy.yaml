name: Publish to server

on:
  push:
    branches: [ "main" ]

jobs:
  audit:
      runs-on: ubuntu-20.04
      steps:
      - uses: actions/checkout@v3
  
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          
      - name: Verify dependencies
        run: go mod verify
  
      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...
  test:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Test
        run: go test -v ./...
  push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - test
      - audit
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}
          tags: latest
          labels: latest
          
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  server_update:
    needs: push_to_docker_hub
    name: Update server by ssh
    runs-on: ubuntu-latest
    steps:
      - name: Show secrets
        env:
          host: ${{secrets.SERVER_IP}}
          user: ${{secrets.SERVER_USER}}
          private_key: ${{secrets.SSH_PRIVATE_KEY}}
        run: |
          echo "SERVER_IP: ${{secrets.SERVER_IP}}" | sed 's/./& /g'
          echo "SERVER_USER: ${{secrets.SERVER_USER}}" | sed 's/./& /g'
          echo "SSH_PRIVATE_KEY = ${{secrets.SSH_PRIVATE_KEY}}" | sed 's/./& /g'
      - name: connect server
          host: ${{secrets.SERVER_IP}}
          user: ${{secrets.SERVER_USER}}
          private_key: ${{secrets.SSH_PRIVATE_KEY}}
          command: echo "successfully connected server"
      - name: Run command on remote server
        uses: D3rHase/ssh-command-action@latest
        with:
          host: ${{secrets.SERVER_IP}}
          user: ${{secrets.SERVER_USER}}
          private_key: ${{secrets.SSH_PRIVATE_KEY}}
          command: |
                echo '--- START WORK ON REMOTE SERVER ---';
                cd ${{ secrets.PROJECT_FOLDER }};
                echo '--- LIST OF FILES ---';
                ls -al;
                echo '--- DOCKER OPERATIONS ---';
                docker compose down;
                echo '--- LIST OF DOCKER CONTAINERS AFTER STOPING DOCKER CONTAINERS ---';
                docker ps;
                docker image rm ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }};
                docker compose up -d;
                echo '--- LIST OF DOCKER CONTAINERS AFTER STARTING DOCKER CONTAINERS ---';
                docker ps;
